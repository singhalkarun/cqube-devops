- name: copying dockerfile script to ingestion repository
  template:
    src: Dockerfile.j2
    dest: "../microservices/ingestion-ms/Dockerfile"
    mode: "0644"  
  tags: [ install, update ]

- name: Creating environmental variables
  file:
    path: ../microservices/ingestion-ms/.env
    state: touch
    mode: u+rw,g+rw,o+rw
  tags: [ install, update ]

- name: Loading required data inside .env file (public)
  blockinfile:
    path: ../microservices/ingestion-ms/.env
    block: |
      JWT_SECRET= 'cqube_secret'
      DB_HOST = 'postgres_app'
      DB_PORT = 5432
      DB_USERNAME = "{{ db_user }}"
      DB_PASSWORD = "{{ db_password }}"
      DB_NAME = "{{ db_name }}"
      NIFI_HOST = 'http://nifi_app'
      NIFI_PORT = 8096
      URL = 'https://{{ api_endpoint }}/api/ingestion'
      STORAGE_TYPE= "{{ storage_type }}"
      AWS_ACCESS_KEY = "{{ aws_access_key }}"
      AWS_SECRET_KEY = "{{ aws_secret_key }}"
      AWS_BUCKET = "{{ s3_bucket }}"
      MINIO_END_POINT = "{{ minio_ip_address }}"
      MINIO_PORT = 9000
      MINIO_ACCESS_KEY = "{{ minio_username }}"
      MINIO_SECRET_KEY = "{{ minio_password }}"
      MINIO_BUCKET = "{{ minio_bucket }}"
      AZURE_CONNECTION_STRING = "{{ azure_connection_string }}"
      AZURE_CONTAINER = "{{ azure_container }}"
      ORACLE_NAMESPACE = "{{ oracle_namespace }}" 
      ORACLE_BUCKET = "{{ oracle_bucket }}"

  when: mode_of_installation != "localhost"
  tags: [ install, update ]


- name: Loading required data inside .env file (localhost)
  blockinfile:
    path: ../microservices/ingestion-ms/.env
    block: |
      JWT_SECRET= 'cqube_secret'
      DB_HOST = 'postgres_app'
      DB_PORT = 5432
      DB_USERNAME = "{{ db_user }}"
      DB_PASSWORD = "{{ db_password }}"
      DB_NAME = "{{ db_name }}"
      NIFI_HOST = 'http://nifi_app'
      NIFI_PORT = 8096
      URL = 'http://{{ api_endpoint }}:3000'
      STORAGE_TYPE = "{{ storage_type }}"
      MINIO_END_POINT = "{{ minio_ip_address }}"
      MINIO_PORT = 9000
      MINIO_ACCESS_KEY = "{{ minio_username }}"
      MINIO_SECRET_KEY = "{{ minio_password }}"
      MINIO_BUCKET = "{{ minio_bucket }}"
      AWS_ACCESS_KEY = "{{ aws_access_key }}"
      AWS_SECRET_KEY = "{{ aws_secret_key }}"
      AWS_BUCKET = "{{ s3_bucket }}"
      AZURE_CONNECTION_STRING = "{{ azure_connection_string }}"
      AZURE_CONTAINER = "{{ azure_container }}"
      ORACLE_NAMESPACE = "{{ oracle_namespace }}"
      ORACLE_BUCKET = "{{ oracle_bucket }}"
  when: mode_of_installation == "localhost"
  tags: [ install, update ]
